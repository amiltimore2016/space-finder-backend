"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = void 0;
const aws_sdk_1 = require("aws-sdk");
const TABLE_NAME = process.env.TABLE_NAME;
const PRIMARY_KEY = process.env.PRIMARY_KEY;
const dbClient = new aws_sdk_1.DynamoDB.DocumentClient();
async function handler(event, context) {
    const result = {
        statusCode: 200,
        body: 'Hello from DynamoDB'
    };
    const requestBody = typeof event.body == 'object' ? event.body : JSON.parse(event.body);
    const spaceId = event.queryStringParameters?.[PRIMARY_KEY];
    if (requestBody && spaceId) {
        const requestBodyKey = Object.keys(requestBody)[0];
        const requestBodyValue = requestBody[requestBodyKey];
        const udpateResult = await dbClient.update({
            TableName: TABLE_NAME,
            Key: {
                [PRIMARY_KEY]: spaceId
            },
            UpdateExpression: 'set #zzzNew = :new',
            ExpressionAttributeValues: {
                ':new': requestBodyValue
            },
            ExpressionAttributeNames: {
                '#zzzNew': requestBodyKey
            },
            ReturnValues: 'UPDATED_NEW'
        }).promise();
        result.body = JSON.stringify(udpateResult);
    }
    return result;
}
exports.handler = handler;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVXBkYXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiVXBkYXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHFDQUFrQztBQUlsQyxNQUFNLFVBQVUsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQW9CLENBQUM7QUFDcEQsTUFBTSxXQUFXLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxXQUFxQixDQUFDO0FBQ3RELE1BQU0sUUFBUSxHQUFHLElBQUksa0JBQVEsQ0FBQyxjQUFjLEVBQUUsQ0FBQztBQUUvQyxLQUFLLFVBQVUsT0FBTyxDQUFDLEtBQTJCLEVBQUUsT0FBZ0I7SUFDaEUsTUFBTSxNQUFNLEdBQTBCO1FBQ2xDLFVBQVUsRUFBRSxHQUFHO1FBQ2YsSUFBSSxFQUFFLHFCQUFxQjtLQUM5QixDQUFBO0lBRUQsTUFBTSxXQUFXLEdBQUcsT0FBTyxLQUFLLENBQUMsSUFBSSxJQUFJLFFBQVEsQ0FBQSxDQUFDLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdkYsTUFBTSxPQUFPLEdBQUcsS0FBSyxDQUFDLHFCQUFxQixFQUFFLENBQUMsV0FBVyxDQUFDLENBQUM7SUFFM0QsSUFBSSxXQUFXLElBQUksT0FBTyxFQUFFO1FBQ3hCLE1BQU0sY0FBYyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbkQsTUFBTSxnQkFBZ0IsR0FBRyxXQUFXLENBQUMsY0FBYyxDQUFDLENBQUM7UUFFckQsTUFBTSxZQUFZLEdBQUcsTUFBTSxRQUFRLENBQUMsTUFBTSxDQUFDO1lBQ3ZDLFNBQVMsRUFBRSxVQUFVO1lBQ3JCLEdBQUcsRUFBRTtnQkFDRCxDQUFDLFdBQVcsQ0FBQyxFQUFFLE9BQU87YUFDekI7WUFDRCxnQkFBZ0IsRUFBRSxvQkFBb0I7WUFDdEMseUJBQXlCLEVBQUU7Z0JBQ3ZCLE1BQU0sRUFBRSxnQkFBZ0I7YUFDM0I7WUFDRCx3QkFBd0IsRUFBRTtnQkFDdEIsU0FBUyxFQUFFLGNBQWM7YUFDNUI7WUFDRCxZQUFZLEVBQUUsYUFBYTtTQUM5QixDQUFDLENBQUMsT0FBTyxFQUFFLENBQUM7UUFFYixNQUFNLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDLENBQUM7S0FDOUM7SUFDRCxPQUFPLE1BQU0sQ0FBQTtBQUNqQixDQUFDO0FBRVEsMEJBQU8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEeW5hbW9EQiB9IGZyb20gJ2F3cy1zZGsnXG5pbXBvcnQgeyBBUElHYXRld2F5UHJveHlFdmVudCwgQVBJR2F0ZXdheVByb3h5UmVzdWx0LCBDb250ZXh0IH0gZnJvbSAnYXdzLWxhbWJkYSdcblxuXG5jb25zdCBUQUJMRV9OQU1FID0gcHJvY2Vzcy5lbnYuVEFCTEVfTkFNRSBhcyBzdHJpbmc7XG5jb25zdCBQUklNQVJZX0tFWSA9IHByb2Nlc3MuZW52LlBSSU1BUllfS0VZIGFzIHN0cmluZztcbmNvbnN0IGRiQ2xpZW50ID0gbmV3IER5bmFtb0RCLkRvY3VtZW50Q2xpZW50KCk7XG5cbmFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIoZXZlbnQ6IEFQSUdhdGV3YXlQcm94eUV2ZW50LCBjb250ZXh0OiBDb250ZXh0KTogUHJvbWlzZTxBUElHYXRld2F5UHJveHlSZXN1bHQ+e1xuICAgIGNvbnN0IHJlc3VsdDogQVBJR2F0ZXdheVByb3h5UmVzdWx0ID0ge1xuICAgICAgICBzdGF0dXNDb2RlOiAyMDAsXG4gICAgICAgIGJvZHk6ICdIZWxsbyBmcm9tIER5bmFtb0RCJ1xuICAgIH1cblxuICAgIGNvbnN0IHJlcXVlc3RCb2R5ID0gdHlwZW9mIGV2ZW50LmJvZHkgPT0gJ29iamVjdCc/IGV2ZW50LmJvZHkgOiBKU09OLnBhcnNlKGV2ZW50LmJvZHkpO1xuICAgIGNvbnN0IHNwYWNlSWQgPSBldmVudC5xdWVyeVN0cmluZ1BhcmFtZXRlcnM/LltQUklNQVJZX0tFWV07XG5cbiAgICBpZiAocmVxdWVzdEJvZHkgJiYgc3BhY2VJZCkge1xuICAgICAgICBjb25zdCByZXF1ZXN0Qm9keUtleSA9IE9iamVjdC5rZXlzKHJlcXVlc3RCb2R5KVswXTtcbiAgICAgICAgY29uc3QgcmVxdWVzdEJvZHlWYWx1ZSA9IHJlcXVlc3RCb2R5W3JlcXVlc3RCb2R5S2V5XTtcblxuICAgICAgICBjb25zdCB1ZHBhdGVSZXN1bHQgPSBhd2FpdCBkYkNsaWVudC51cGRhdGUoe1xuICAgICAgICAgICAgVGFibGVOYW1lOiBUQUJMRV9OQU1FLFxuICAgICAgICAgICAgS2V5OiB7XG4gICAgICAgICAgICAgICAgW1BSSU1BUllfS0VZXTogc3BhY2VJZFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFVwZGF0ZUV4cHJlc3Npb246ICdzZXQgI3p6ek5ldyA9IDpuZXcnLFxuICAgICAgICAgICAgRXhwcmVzc2lvbkF0dHJpYnV0ZVZhbHVlczoge1xuICAgICAgICAgICAgICAgICc6bmV3JzogcmVxdWVzdEJvZHlWYWx1ZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIEV4cHJlc3Npb25BdHRyaWJ1dGVOYW1lczoge1xuICAgICAgICAgICAgICAgICcjenp6TmV3JzogcmVxdWVzdEJvZHlLZXlcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBSZXR1cm5WYWx1ZXM6ICdVUERBVEVEX05FVydcbiAgICAgICAgfSkucHJvbWlzZSgpO1xuXG4gICAgICAgIHJlc3VsdC5ib2R5ID0gSlNPTi5zdHJpbmdpZnkodWRwYXRlUmVzdWx0KTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdFxufVxuXG5leHBvcnQgeyBoYW5kbGVyIH0iXX0=